/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Optimize key repeat and debounce
&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&mt {
    tapping-term-ms = <280>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <120>;
    flavor = "balanced";
};

&lt { 
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    require-prior-idle-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_bksp {
            timeout-ms = <35>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
            require-prior-idle-ms = <100>;
            slow-release;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 4>;
            key-positions = <36 37 40 41>;
        };

        canary_switch {
            bindings = <&tog 5>;
            key-positions = <38 39 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37>;
        };

        caps_combo {
            bindings = <&caps_word>;
            key-positions = <13 14>;
        };

        undo_combo {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26 27>;
            timeout-ms = <40>;
        };

        copy_combo {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
            timeout-ms = <35>;
        };

        paste_combo {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
            timeout-ms = <35>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        gallium_layer {
            bindings = <
&none  &kp B  &kp L  &kp D         &kp C         &kp V             &kp J            &kp Y      &kp O                 &kp U          &kp COMMA   &none
&none  &kp N  &kp R  &kp T         &kp S         &kp G             &kp P            &kp H      &kp A                 &kp E          &kp I       &none
&none  &kp X  &kp Q  &kp M         &kp W         &kp Z             &kp K            &kp F      &kp SQT               &kp SEMICOLON  &kp PERIOD  &none
                     &mt LALT ESC  &lt 2 TAB     &mt LGUI SPACE    &mt LCTRL ENTER  &lt 1 DEL  &mt LSHIFT BACKSPACE
            >;
        };

        num_layer {
            bindings = <
&trans  &kp F1     &kp F2    &kp F3    &kp F4   &kp F5       &kp KP_DIVIDE    &kp N1  &kp N2  &kp N3  &kp KP_PLUS   &trans
&trans  &kp F7     &kp F8    &kp F9    &kp F10  &kp F11      &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp KP_MINUS  &trans
&trans  &kp PSCRN  &kp CAPS  &kp HOME  &kp END  &kp PG_UP    &kp F12          &kp N7  &kp N8  &kp N9  &kp DOT       &trans
                             &mo 3     &trans   &trans       &kp N0           &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &kp GRAVE        &kp TILDE    &kp HASH     &kp DOLLAR      &kp PERCENT       &kp CARET    &kp AT_SIGN   &kp ASTERISK   &kp EXCLAMATION  &kp QUESTION  &trans
&trans  &kp UNDERSCORE   &kp MINUS    &kp LPAR     &kp RPAR        &kp LBKT          &kp RBKT     &kp EQUAL     &kp PLUS       &kp COLON        &kp SEMI      &trans
&trans  &kp PIPE         &kp LT       &kp LBRC     &kp RBRC        &kp GT            &kp AMPS     &kp SQT       &kp DQT        &kp FSLH         &kp BSLH      &trans
                                      &trans       &trans          &trans            &trans       &mo 3         &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &none   &trans    &kp UP    &trans     &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &trans    &trans    &trans     &trans  &trans
                                    &trans        &trans        &trans            &trans  &trans    &trans
            >;
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E             &kp R         &kp T                 &kp Y            &kp U            &kp I                &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D             &kp F         &kp G                 &kp H            &kp J            &kp K                &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C             &kp V         &kp B                 &kp N            &kp M            &kp COMMA            &kp DOT  &kp FSLH  &trans
                      &mt LEFT_ALT DEL  &lt 1 ESCAPE  &mt LEFT_GUI SPACE    &mt LCTRL ENTER  &lt 2 BACKSPACE  &mt LSHFT BACKSPACE
            >;
        };

        canary_layer {
            bindings = <
&none  &kp W  &kp L  &kp Y         &kp P         &kp B                 &kp Z            &kp F      &kp O                     &kp U      &kp SQT     &none
&none  &kp C  &kp R  &kp S         &kp T         &kp G                 &kp M            &kp N      &kp E                     &kp I      &kp A       &none
&none  &kp Q  &kp J  &kp V         &kp D         &kp K                 &kp X            &kp H      &kp SLASH                 &kp COMMA  &kp PERIOD  &none
                     &mt LALT DEL  &lt 1 ESCAPE  &mt LEFT_GUI SPACE    &mt LCTRL ENTER  &lt 2 TAB  &mt RC(LSHIFT) BACKSPACE
            >;
        };
    };
};
