/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 4>;
            key-positions = <36 37 40 41>;
        };

        gallium_switch {
            bindings = <&tog 5>;
            key-positions = <38 39 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37>;
        };

        caps_combo {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 14>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        canary_layer {
            bindings = <
&none  &kp W  &kp L  &kp Y             &kp P         &kp B             &kp Z            &kp F      &kp O                     &kp U      &kp SQT     &none
&none  &kp C  &kp R  &kp S             &kp T         &kp G             &kp M            &kp N      &kp E                     &kp I      &kp A       &none
&none  &kp Q  &kp J  &kp V             &kp D         &kp K             &kp X            &kp H      &kp SLASH                 &kp COMMA  &kp PERIOD  &none
                     &mt LEFT_GUI DEL  &lt 1 ESCAPE  &mt LALT SPACE    &mt LCTRL ENTER  &lt 2 TAB  &mt RC(LSHIFT) BACKSPACE
            >;
        };

        numsym_layer {
            bindings = <
&trans  &kp CAPS       &kp KP_NUM  &kp UP_ARROW    &kp KP_EQUAL   &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS      &trans
&trans  &kp SEMICOLON  &kp LEFT    &kp DOWN_ARROW  &kp LEFT       &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS     &trans
&trans  &kp GRAVE      &kp PG_UP   &kp CAPS        &kp PAGE_DOWN  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_MULTIPLY  &trans
                                   &trans          &trans         &to 4                   &trans                 &trans     &kp KP_N0
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW    &kp K_COPY  &kp PRINTSCREEN  &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp C_PLAY_PAUSE      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &kp PG_UP        &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp K_UNDO      &kp K_REDO      &kp K_CUT   &kp PAGE_DOWN    &trans
                        &trans  &trans   &trans          &to 3                 &trans          &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans            &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none   &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E             &kp R         &kp T             &kp Y            &kp U            &kp I                &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D             &kp F         &kp G             &kp H            &kp J            &kp K                &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C             &kp V         &kp B             &kp N            &kp M            &kp COMMA            &kp DOT  &kp FSLH  &trans
                      &mt LEFT_GUI DEL  &lt 1 ESCAPE  &mt LALT SPACE    &mt LCTRL ENTER  &lt 2 BACKSPACE  &mt LSHFT BACKSPACE
            >;
        };

        gallium_colemak_layer {
            bindings = <
&none  &kp B  &kp L  &kp D             &kp W         &kp Z             &kp SQT          &kp F      &kp O                     &kp U      &kp J       &none
&none  &kp N  &kp R  &kp T             &kp S         &kp G             &kp Y            &kp H      &kp A                     &kp E      &kp I       &none
&none  &kp Q  &kp X  &kp M             &kp C         &kp V             &kp K            &kp P      &kp SLASH                 &kp COMMA  &kp PERIOD  &none
                     &mt LEFT_GUI DEL  &lt 1 ESCAPE  &mt LALT SPACE    &mt LCTRL ENTER  &lt 2 TAB  &mt RC(LSHIFT) BACKSPACE
            >;
        };
    };
};
